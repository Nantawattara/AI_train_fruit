import customtkinter as ctk
from tkinter import filedialog, messagebox
from PIL import Image, ImageTk
import tensorflow as tf
import numpy as np

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• AI
model = tf.keras.models.load_model('thai_fruit_model.h5')
class_names = ['jackfruit', 'long kong','Muntingia', 'Pineapple', 'rambutan', 'sapodilla']

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
def browse_image():
    file_path = filedialog.askopenfilename(filetypes=[("Image Files", "*.jpg;*.png;*.jpeg")])
    if file_path:
        load_image(file_path)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
def load_image(file_path):
    img = Image.open(file_path)
    img = img.resize((250, 250))
    img = ImageTk.PhotoImage(img)
    panel.configure(image=img)
    panel.image = img
    global image_path
    image_path = file_path

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡πÑ‡∏°‡πâ
def recognize_image():
    if not image_path:
        messagebox.showerror("Error", "Please select an image first.")
        return

    img = Image.open(image_path).resize((224, 224))
    img_array = np.array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    predictions = model.predict(img_array)
    predicted_class = np.argmax(predictions)
    confidence = np.max(predictions) * 100

    fruit_name = class_names[predicted_class]
    result_label.configure(text=f"üçç ‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢: {fruit_name}\nüéØ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {confidence:.2f}%")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á GUI
ctk.set_appearance_mode("light")  # ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏™‡∏á
ctk.set_default_color_theme("blue")  # ‡∏ò‡∏µ‡∏°‡∏™‡∏µ

window = ctk.CTk()
window.title("üåø AI Fruit Recognizer")
window.geometry("450x600")

# ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á Gradient
bg_frame = ctk.CTkFrame(window, fg_color=("Yellow", "Yellow"))
bg_frame.pack(fill="both", expand=True)

# ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
title_label = ctk.CTkLabel(bg_frame, text="üçâ ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏¢‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏•‡πÑ‡∏°‡πâ üçå", text_color="black", font=("Arial", 18, "bold"))
title_label.pack(pady=10)

# ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
panel = ctk.CTkLabel(bg_frame, text="", width=250, height=250, corner_radius=10, fg_color="white")
panel.pack(pady=20)

# ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
browse_button = ctk.CTkButton(bg_frame, text="üìÇ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", command=browse_image, fg_color="#FFA500", text_color="white", font=("Arial", 14, "bold"))
browse_button.pack(pady=10)

# ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡πÑ‡∏°‡πâ
recognize_button = ctk.CTkButton(bg_frame, text="üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•‡πÑ‡∏°‡πâ", command=recognize_image, fg_color="#008CBA", text_color="white", font=("Arial", 14, "bold"))
recognize_button.pack(pady=10)

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
result_label = ctk.CTkLabel(bg_frame, text="üîΩ ‡∏£‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏• üîΩ", text_color="black", font=("Arial", 16, "bold"))
result_label.pack(pady=20)

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏û‡∏≤‡∏ò‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
image_path = None

window.mainloop()
